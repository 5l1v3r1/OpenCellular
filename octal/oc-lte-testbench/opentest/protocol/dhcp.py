from opentest.server.service.dhcp_service import DHCPServiceClient
from nute import utils
import os
import click

@click.group(help="This file contains all function use for ATE")
def group_entry():
    pass

##region create(serverport, localip)
@utils.capture_print
@group_entry.command('create', help="before any other function")
@click.argument('serverport')
@click.argument('localip')

def _cmd_create(*args, **kwargs):
    create(*args, **kwargs)

def create(serverport):
    with DHCPServiceClient(url="dhcp", ip="127.0.0.1", port=serverport) as client:
        client.create_service(localip=localip)

##endregion create(serverport, localip)

if __name__ == "__main__":
    # This block pauses the command line when bad arguments are passed or when the
    # main exits early.
    # This is needed when the command line exits after execution, as it gives us
    # time to see the error.
    try:
        group_entry()
    except SystemExit as e:
        os.system("pause")
        raise
