from BASE_INTERF import *
from websocket import create_connection

class LOCAL_INTERF(BASE_INTERF):

    def __init__(self,IP,PORT,username="",password=""):
        self.ws_handle = None
        self.addr = IP
        self.port = PORT
        self.username = username
        self.password = password

    def connect(self):
        try:
            self.ws_handle = create_connection("ws://"+self.addr+":"+self.port,timeout=3)
        except Exception as e:
            raise WSNoConnectError("Unable to connect to WebSocket host: " + e.message)

    def close(self):
        try:
            self.ws_handle.close()
        except:
            pass

    def is_connected(self):
        try:
            return self.ws_handle.connected
        # If the WebSocket object is not instantiated, an AttributeError is raised
        except AttributeError:
            return False

    def websocket_client_connected(function):
        def check_connected(*args, **kwargs):
            _self = args[0]
            if not _self.is_connected():
                _self.connect()
            return function(*args, **kwargs)

        return check_connected

    @websocket_client_connected
    def send_rcv(self,command):

        self.ws_handle.send(command)
        output = self.ws_handle.recv()
        return output
